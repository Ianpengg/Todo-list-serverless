import Head from 'next/head'
import Todolist from '@/components/Todolist';
import React, { useState, useEffect } from 'react'

const defaultEndpoint = 'https://yxyoxpxrbi.execute-api.us-east-1.amazonaws.com/dev/todos';
const corsURL = 'https://cors-anywhere.herokuapp.com/';

export async function getServerSideProps() {
  const res = await fetch(defaultEndpoint);
  const data = await res.json();
  console.log(data)
  return {
    props: {
      data
    }
  }
}

export default function Home({data}) {
  data = data['Items']
  const [newTask, setNewTask] = useState({});
  const [updated, setUpdated] = useState(false);
  const handleChange = (event) => {
    setNewTask({ ...newTask, 'text': event.target.value });
  };
  
  const handleDelete = async (id) => {
    const response = await fetch(`${corsURL}${defaultEndpoint}/${id}`, {
      method: "DELETE",
      headers: {
        "Content-Type": "application/json",
      },
    })
    .then(response => {
      setUpdated(true);
    })
    .catch(error => {
      console.error('Error:', error);
    });
  } 
  const handleSubmit = async (event) => {
    event.preventDefault();
      const response = await fetch(`${corsURL}${defaultEndpoint}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(newTask),
      })
      .then(response => response.json())
      .then(data => {
        setUpdated(true);
        setNewTask({text: ""});
        console.log('Success:', data);
      })
      .catch(error => {
        console.error('Error:', error);
      });
    }
    
    useEffect(() => {
      if (updated) {
        window.location.reload();;
      }
    }, [updated]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col items-center justify-center min-h-screen bg-slate-200"> 
        <Todolist 
          data={data} 
          handleSubmit={handleSubmit}
          handleChange={handleChange}
          handleDelete={handleDelete}
          newTask={newTask}
          />
      </div>
    </>
  )
}

